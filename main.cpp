#include "compressing_plane.h"
#include "func.h"
int main()
{
	CompressingPlane A;
	// Для внутренних узлов
	map< char ,list< map<int,double> > >T;
		map<int,double>  CT1_1; // Первый интеграл
		CT1_1[0] =  2;
		CT1_1[1] = -1;
		CT1_1[2] =  0;
		CT1_1[3] =  0;
		CT1_1[4] = -1;
		CT1_1[5] =  0.5;
		CT1_1[6] =  0;
	//T["l"] = CT1_1
		map<int,double>  CT2_1; // Первый интеграл
		CT2_1[0] = -1;
		CT2_1[1] =  0.5;
		CT2_1[2] = -0.5;
		CT2_1[3] =  0.5;
		CT2_1[4] =  0.5;
		CT2_1[5] = -0.5;
		CT2_1[6] =  0.5;
		map<int,double>  CT1_2; // Первый интеграл
		CT1_2[0] =  2;
		CT1_2[1] =  0;
		CT1_2[2] =  0;
		CT1_2[3] = -1;
		CT1_2[4] =  0;
		CT1_2[5] =  0;
		CT1_2[6] = -1;
		map<int,double>  CT2_2; // Первый интеграл
		CT2_2[0] = -1;
		CT2_2[1] =  0.5;
		CT2_2[2] = -0.5;
		CT2_2[3] =  0.5;
		CT2_2[4] =  0.5;
		CT2_2[5] = -0.5;
		CT2_2[6] =  0;
	// Для Левой границы
		map<int,double>  LT1_1; // Первый интеграл
		LT1_1[0] =  1;
		LT1_1[1] = -1;
		LT1_1[2] =  0;
		LT1_1[3] =  0;
		LT1_1[6] =  0;
		map<int,double>  LT2_1; // Первый интеграл
		LT2_1[0] = -0.5;
		LT2_1[1] =  0.5;
		LT2_1[2] = -0.5;
		LT2_1[3] =  0;
		LT2_1[6] =  0.5;
		map<int,double>  LT1_2; // Первый интеграл
		LT1_2[0] =  1;
		LT1_2[1] =  0;
		LT1_2[2] =  0;
		LT1_2[3] = -0.5;
		LT1_2[6] = -0.5;
		map<int,double>  LT2_2; // Первый интеграл
		LT2_2[0] = -0.5;
		LT2_2[1] =  0.5;
		LT2_2[2] = -0.5;
		LT2_2[3] =  0.5;
		LT2_2[6] =  0;
	// Для Правая границы
		map<int,double>  RT1_1; // Первый интеграл
		RT1_1[0] =  1;
		RT1_1[3] =  0;
		RT1_1[4] = -1;
		RT1_1[5] =  0;
		RT1_1[6] =  0;
		map<int,double>  RT2_1; // Первый интеграл
		RT2_1[0] = -0.5;
		RT2_1[3] =  0.5;
		RT2_1[4] =  0.5;
		RT2_1[5] = -0.5;
		RT2_1[6] =  0;
		map<int,double>  RT1_2; // Первый интеграл
		RT1_2[0] =  1;
		RT1_2[3] = -0.5;
		RT1_2[4] =  0;
		RT1_2[5] =  0;
		RT1_2[6] = -0.5;
		map<int,double>  RT2_2; // Первый интеграл
		RT2_2[0] = -0.5;
		RT2_2[3] =  0;
		RT2_2[4] =  0.5;
		RT2_2[5] = -0.5;
		RT2_2[6] =  0.5;
	// for (int i = 0; i < n; ++i)
	// {
	// 	for (int j = 0; j < n; ++j)
	// 	{
	// 		matrix.push_back(stringMatrix(i,j,n));//получение строки занчений
	// 	}
	// }
	return 0;
}
